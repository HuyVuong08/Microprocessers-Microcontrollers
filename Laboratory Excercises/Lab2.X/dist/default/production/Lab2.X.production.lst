

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 08:16:38 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 2.10
    30                           ; Generated 31/07/2019 GMT
    31                           ; 
    32                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F8722 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	nvCOMRAM
    65  00002C                     __pnvCOMRAM:
    66                           	opt callstack 0
    67  00002C                     _timerReloadVal:
    68                           	opt callstack 0
    69  00002C                     	ds	2
    70  0000                     _TMR1	set	4046
    71  0000                     _INTCONbits	set	4082
    72  0000                     _PORTAbits	set	3968
    73  0000                     _PORTBbits	set	3969
    74  0000                     _T1CONbits	set	4045
    75  0000                     _PIE1bits	set	3997
    76  0000                     _PIR1bits	set	3998
    77  0000                     _TMR1L	set	4046
    78  0000                     _TMR1H	set	4047
    79  0000                     _T1CON	set	4045
    80  0000                     _ADCON1	set	4033
    81  0000                     _IPR1bits	set	3999
    82  0000                     _RCONbits	set	4048
    83  0000                     _LATD	set	3980
    84  0000                     _TRISD	set	3989
    85  0000                     _TRISBbits	set	3987
    86  0000                     _TRISAbits	set	3986
    87  0000                     _OSCTUNE	set	3995
    88  0000                     _OSCCON	set	4051
    89                           
    90                           ; #config settings
    91  0000                     
    92                           	psect	cinit
    93  000572                     __pcinit:
    94                           	opt callstack 0
    95  000572                     start_initialization:
    96                           	opt callstack 0
    97  000572                     __initialization:
    98                           	opt callstack 0
    99                           
   100                           ; Clear objects allocated to COMRAM (38 bytes)
   101  000572  EE00  F001         	lfsr	0,__pbssCOMRAM
   102  000576  0E26               	movlw	38
   103  000578                     clear_0:
   104  000578  6AEE               	clrf	postinc0,c
   105  00057A  06E8               	decf	wreg,f,c
   106  00057C  E1FD               	bnz	clear_0
   107  00057E                     end_of_initialization:
   108                           	opt callstack 0
   109  00057E                     __end_of__initialization:
   110                           	opt callstack 0
   111  00057E  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112  000580  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113  000582  0100               	movlb	0
   114  000584  EFCF  F002         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117  000001                     __pbssCOMRAM:
   118                           	opt callstack 0
   119  000001                     _secondReadRB0:
   120                           	opt callstack 0
   121  000001                     	ds	2
   122  000003                     _firstReadRB0:
   123                           	opt callstack 0
   124  000003                     	ds	2
   125  000005                     _secondReadRA5:
   126                           	opt callstack 0
   127  000005                     	ds	2
   128  000007                     _firstReadRA5:
   129                           	opt callstack 0
   130  000007                     	ds	2
   131  000009                     _countRB0_300ms:
   132                           	opt callstack 0
   133  000009                     	ds	2
   134  00000B                     _countRB0_100ms:
   135                           	opt callstack 0
   136  00000B                     	ds	2
   137  00000D                     _countRA5_300ms:
   138                           	opt callstack 0
   139  00000D                     	ds	2
   140  00000F                     _countRA5_100ms:
   141                           	opt callstack 0
   142  00000F                     	ds	2
   143  000011                     _pCountRB0:
   144                           	opt callstack 0
   145  000011                     	ds	2
   146  000013                     _pCountRA5:
   147                           	opt callstack 0
   148  000013                     	ds	2
   149  000015                     _pRA5_3s:
   150                           	opt callstack 0
   151  000015                     	ds	2
   152  000017                     _pRA5_1s:
   153                           	opt callstack 0
   154  000017                     	ds	2
   155  000019                     _pRA5:
   156                           	opt callstack 0
   157  000019                     	ds	2
   158  00001B                     _pRB0_3s:
   159                           	opt callstack 0
   160  00001B                     	ds	2
   161  00001D                     _pRB0_1s:
   162                           	opt callstack 0
   163  00001D                     	ds	2
   164  00001F                     _pRB0:
   165                           	opt callstack 0
   166  00001F                     	ds	2
   167  000021                     _state:
   168                           	opt callstack 0
   169  000021                     	ds	2
   170  000023                     _fastCountDownFlag:
   171                           	opt callstack 0
   172  000023                     	ds	1
   173  000024                     _normalCountDownFlag:
   174                           	opt callstack 0
   175  000024                     	ds	1
   176  000025                     _fastCountUpFlag:
   177                           	opt callstack 0
   178  000025                     	ds	1
   179  000026                     _normalCountUpFlag:
   180                           	opt callstack 0
   181  000026                     	ds	1
   182                           
   183                           	psect	cstackCOMRAM
   184  000027                     __pcstackCOMRAM:
   185                           	opt callstack 0
   186  000027                     ?_readButtonRB0:
   187                           	opt callstack 0
   188  000027                     ?_readButtonRA5:
   189                           	opt callstack 0
   190  000027                     
   191                           ; 2 bytes @ 0x0
   192  000027                     	ds	2
   193  000029                     ??_readButtonRB0:
   194  000029                     ??_readButtonRA5:
   195                           
   196                           ; 1 bytes @ 0x2
   197  000029                     	ds	1
   198  00002A                     ??_FSM:
   199                           
   200                           ; 1 bytes @ 0x3
   201  00002A                     	ds	2
   202  00002C                     
   203                           ; 1 bytes @ 0x5
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 274 in file "main.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  2  184[None  ] int 
   216 ;; Registers used:
   217 ;;		wreg, status,2, status,0, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   227 ;;Total ram usage:        0 bytes
   228 ;; Hardware stack levels required when called:    6
   229 ;; This function calls:
   230 ;;		_FSM
   231 ;;		_SYSTEM_IN
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text0
   238  00059E                     __ptext0:
   239                           	opt callstack 0
   240  00059E                     _main:
   241                           	opt callstack 25
   242  00059E                     
   243                           ;main.c: 276:     SYSTEM_IN();
   244  00059E  ECC4  F002         	call	_SYSTEM_IN	;wreg free
   245  0005A2                     
   246                           ;main.c: 277:     INTCONbits.GIE = 1;
   247  0005A2  8EF2               	bsf	242,7,c	;volatile
   248  0005A4                     
   249                           ;main.c: 278:     INTCONbits.PEIE = 1;
   250  0005A4  8CF2               	bsf	242,6,c	;volatile
   251  0005A6                     l1098:
   252                           
   253                           ;main.c: 281:         FSM();
   254  0005A6  EC21  F001         	call	_FSM	;wreg free
   255  0005AA  EFD3  F002         	goto	l1098
   256  0005AE  EF07  F000         	goto	start
   257  0005B2                     __end_of_main:
   258                           	opt callstack 0
   259                           
   260 ;; *************** function _SYSTEM_IN *****************
   261 ;; Defined at:
   262 ;;		line 118 in file "main.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;Total ram usage:        0 bytes
   281 ;; Hardware stack levels used:    1
   282 ;; Hardware stack levels required when called:    5
   283 ;; This function calls:
   284 ;;		_ADC
   285 ;;		_INTERRUPT
   286 ;;		_OSCILLATOR
   287 ;;		_PIN_MANAGER
   288 ;;		_TMR1_IN
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text1
   295  000588                     __ptext1:
   296                           	opt callstack 0
   297  000588                     _SYSTEM_IN:
   298                           	opt callstack 25
   299  000588                     
   300                           ;main.c: 119:     OSCILLATOR();
   301  000588  ECE0  F002         	call	_OSCILLATOR	;wreg free
   302                           
   303                           ;main.c: 120:     PIN_MANAGER();
   304  00058C  ECD9  F002         	call	_PIN_MANAGER	;wreg free
   305                           
   306                           ;main.c: 121:     ADC();
   307  000590  ECED  F002         	call	_ADC	;wreg free
   308  000594                     
   309                           ;main.c: 122:     INTERRUPT();
   310  000594  ECEA  F002         	call	_INTERRUPT	;wreg free
   311  000598                     
   312                           ;main.c: 123:     TMR1_IN();
   313  000598  EC9B  F002         	call	_TMR1_IN	;wreg free
   314  00059C  0012               	return		;funcret
   315  00059E                     __end_of_SYSTEM_IN:
   316                           	opt callstack 0
   317                           
   318 ;; *************** function _TMR1_IN *****************
   319 ;; Defined at:
   320 ;;		line 88 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    4
   341 ;; This function calls:
   342 ;;		_TMR1_Start
   343 ;; This function is called by:
   344 ;;		_SYSTEM_IN
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text2
   349  000536                     __ptext2:
   350                           	opt callstack 0
   351  000536                     _TMR1_IN:
   352                           	opt callstack 25
   353  000536                     
   354                           ;main.c: 89:     T1CON = 0x7D;
   355  000536  0E7D               	movlw	125
   356  000538  6ECD               	movwf	205,c	;volatile
   357                           
   358                           ;main.c: 96:     TMR1H = 0xF6;
   359  00053A  0EF6               	movlw	246
   360  00053C  6ECF               	movwf	207,c	;volatile
   361                           
   362                           ;main.c: 97:     TMR1L = 0x3B;
   363  00053E  0E3B               	movlw	59
   364  000540  6ECE               	movwf	206,c	;volatile
   365  000542                     
   366                           ;main.c: 98:     timerReloadVal = TMR1;
   367  000542  CFCE F02C          	movff	4046,_timerReloadVal	;volatile
   368  000546  CFCF F02D          	movff	4047,_timerReloadVal+1	;volatile
   369  00054A                     
   370                           ;main.c: 99:     PIR1bits.TMR1IF = 0;
   371  00054A  909E               	bcf	158,0,c	;volatile
   372  00054C                     
   373                           ;main.c: 100:     PIE1bits.TMR1IE = 1;
   374  00054C  809D               	bsf	157,0,c	;volatile
   375  00054E                     
   376                           ;main.c: 101:     TMR1_Start();
   377  00054E  ECF0  F002         	call	_TMR1_Start	;wreg free
   378  000552  0012               	return		;funcret
   379  000554                     __end_of_TMR1_IN:
   380                           	opt callstack 0
   381                           
   382 ;; *************** function _TMR1_Start *****************
   383 ;; Defined at:
   384 ;;		line 110 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		None
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels used:    1
   404 ;; Hardware stack levels required when called:    3
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_TMR1_IN
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text3
   413  0005E0                     __ptext3:
   414                           	opt callstack 0
   415  0005E0                     _TMR1_Start:
   416                           	opt callstack 25
   417  0005E0                     
   418                           ;main.c: 111:     T1CONbits.TMR1ON = 1;
   419  0005E0  80CD               	bsf	205,0,c	;volatile
   420  0005E2  0012               	return		;funcret
   421  0005E4                     __end_of_TMR1_Start:
   422                           	opt callstack 0
   423                           
   424 ;; *************** function _PIN_MANAGER *****************
   425 ;; Defined at:
   426 ;;		line 70 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_SYSTEM_IN
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text4
   455  0005B2                     __ptext4:
   456                           	opt callstack 0
   457  0005B2                     _PIN_MANAGER:
   458                           	opt callstack 26
   459  0005B2                     
   460                           ;main.c: 71:     TRISAbits.TRISA5 = 1;
   461  0005B2  8A92               	bsf	146,5,c	;volatile
   462                           
   463                           ;main.c: 72:     TRISBbits.TRISB0 = 1;
   464  0005B4  8093               	bsf	147,0,c	;volatile
   465  0005B6                     
   466                           ;main.c: 73:     TRISD = 0x00;
   467  0005B6  0E00               	movlw	0
   468  0005B8  6E95               	movwf	149,c	;volatile
   469                           
   470                           ;main.c: 74:     LATD = 0x00;
   471  0005BA  0E00               	movlw	0
   472  0005BC  6E8C               	movwf	140,c	;volatile
   473  0005BE  0012               	return		;funcret
   474  0005C0                     __end_of_PIN_MANAGER:
   475                           	opt callstack 0
   476                           
   477 ;; *************** function _OSCILLATOR *****************
   478 ;; Defined at:
   479 ;;		line 65 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    3
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_SYSTEM_IN
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text5
   508  0005C0                     __ptext5:
   509                           	opt callstack 0
   510  0005C0                     _OSCILLATOR:
   511                           	opt callstack 26
   512  0005C0                     
   513                           ;main.c: 66:     OSCCON = 0x76;
   514  0005C0  0E76               	movlw	118
   515  0005C2  6ED3               	movwf	211,c	;volatile
   516                           
   517                           ;main.c: 67:     OSCTUNE = 0x00;
   518  0005C4  0E00               	movlw	0
   519  0005C6  6E9B               	movwf	155,c	;volatile
   520  0005C8  0012               	return		;funcret
   521  0005CA                     __end_of_OSCILLATOR:
   522                           	opt callstack 0
   523                           
   524 ;; *************** function _INTERRUPT *****************
   525 ;; Defined at:
   526 ;;		line 77 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		None
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; Hardware stack levels required when called:    3
   547 ;; This function calls:
   548 ;;		Nothing
   549 ;; This function is called by:
   550 ;;		_SYSTEM_IN
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text6
   555  0005D4                     __ptext6:
   556                           	opt callstack 0
   557  0005D4                     _INTERRUPT:
   558                           	opt callstack 26
   559  0005D4                     
   560                           ;main.c: 78:     RCONbits.IPEN = 0;
   561  0005D4  9ED0               	bcf	208,7,c	;volatile
   562                           
   563                           ;main.c: 79:     IPR1bits.TMR1IP = 0;
   564  0005D6  909F               	bcf	159,0,c	;volatile
   565  0005D8  0012               	return		;funcret
   566  0005DA                     __end_of_INTERRUPT:
   567                           	opt callstack 0
   568                           
   569 ;; *************** function _ADC *****************
   570 ;; Defined at:
   571 ;;		line 82 in file "main.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    3
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_SYSTEM_IN
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text7
   600  0005DA                     __ptext7:
   601                           	opt callstack 0
   602  0005DA                     _ADC:
   603                           	opt callstack 26
   604  0005DA                     
   605                           ;main.c: 83:     ADCON1 = 0x0F;
   606  0005DA  0E0F               	movlw	15
   607  0005DC  6EC1               	movwf	193,c	;volatile
   608  0005DE  0012               	return		;funcret
   609  0005E0                     __end_of_ADC:
   610                           	opt callstack 0
   611                           
   612 ;; *************** function _FSM *****************
   613 ;; Defined at:
   614 ;;		line 219 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    4
   635 ;; This function calls:
   636 ;;		_checkRA5
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text8
   643  000242                     __ptext8:
   644                           	opt callstack 0
   645  000242                     _FSM:
   646                           	opt callstack 26
   647  000242                     
   648                           ;main.c: 220:     switch (state) {
   649  000242  EFFB  F001         	goto	l1078
   650  000246                     l994:
   651                           
   652                           ;main.c: 222:             if (pRA5) {
   653  000246  5019               	movf	_pRA5^0,w,c
   654  000248  101A               	iorwf	(_pRA5+1)^0,w,c
   655  00024A  B4D8               	btfsc	status,2,c
   656  00024C  EF2A  F001         	goto	u181
   657  000250  EF2C  F001         	goto	u180
   658  000254                     u181:
   659  000254  EF33  F001         	goto	l1000
   660  000258                     u180:
   661  000258                     
   662                           ;main.c: 223:                 LATD++;
   663  000258  2A8C               	incf	140,f,c	;volatile
   664  00025A                     
   665                           ;main.c: 224:                 state = 1;
   666  00025A  0E00               	movlw	0
   667  00025C  6E22               	movwf	(_state+1)^0,c
   668  00025E  0E01               	movlw	1
   669  000260  6E21               	movwf	_state^0,c
   670                           
   671                           ;main.c: 225:             } else if (pRB0) {
   672  000262  EF25  F002         	goto	l180
   673  000266                     l1000:
   674  000266  501F               	movf	_pRB0^0,w,c
   675  000268  1020               	iorwf	(_pRB0+1)^0,w,c
   676  00026A  B4D8               	btfsc	status,2,c
   677  00026C  EF3A  F001         	goto	u191
   678  000270  EF3C  F001         	goto	u190
   679  000274                     u191:
   680  000274  EF25  F002         	goto	l180
   681  000278                     u190:
   682  000278                     
   683                           ;main.c: 226:                 LATD--;
   684  000278  068C               	decf	140,f,c	;volatile
   685  00027A                     
   686                           ;main.c: 227:                 state = 4;
   687  00027A  0E00               	movlw	0
   688  00027C  6E22               	movwf	(_state+1)^0,c
   689  00027E  0E04               	movlw	4
   690  000280  6E21               	movwf	_state^0,c
   691  000282  EF25  F002         	goto	l180
   692  000286                     l1006:
   693                           
   694                           ;main.c: 231:             if (!pRA5) state = 0;
   695  000286  5019               	movf	_pRA5^0,w,c
   696  000288  101A               	iorwf	(_pRA5+1)^0,w,c
   697  00028A  A4D8               	btfss	status,2,c
   698  00028C  EF4A  F001         	goto	u201
   699  000290  EF4C  F001         	goto	u200
   700  000294                     u201:
   701  000294  EF52  F001         	goto	l1010
   702  000298                     u200:
   703  000298                     l1008:
   704  000298  0E00               	movlw	0
   705  00029A  6E22               	movwf	(_state+1)^0,c
   706  00029C  0E00               	movlw	0
   707  00029E  6E21               	movwf	_state^0,c
   708  0002A0  EF25  F002         	goto	l180
   709  0002A4                     l1010:
   710  0002A4  5017               	movf	_pRA5_1s^0,w,c
   711  0002A6  1018               	iorwf	(_pRA5_1s+1)^0,w,c
   712  0002A8  B4D8               	btfsc	status,2,c
   713  0002AA  EF59  F001         	goto	u211
   714  0002AE  EF5B  F001         	goto	u210
   715  0002B2                     u211:
   716  0002B2  EF25  F002         	goto	l180
   717  0002B6                     u210:
   718  0002B6  0E00               	movlw	0
   719  0002B8  6E22               	movwf	(_state+1)^0,c
   720  0002BA  0E02               	movlw	2
   721  0002BC  6E21               	movwf	_state^0,c
   722  0002BE  EF25  F002         	goto	l180
   723  0002C2                     l1014:
   724                           
   725                           ;main.c: 235:             if (normalCountUpFlag == 1) {
   726  0002C2  0426               	decf	_normalCountUpFlag^0,w,c
   727  0002C4  A4D8               	btfss	status,2,c
   728  0002C6  EF67  F001         	goto	u221
   729  0002CA  EF69  F001         	goto	u220
   730  0002CE                     u221:
   731  0002CE  EF6C  F001         	goto	l1020
   732  0002D2                     u220:
   733  0002D2                     
   734                           ;main.c: 236:                 LATD++;
   735  0002D2  2A8C               	incf	140,f,c	;volatile
   736  0002D4                     
   737                           ;main.c: 237:                 normalCountUpFlag = 0;
   738  0002D4  0E00               	movlw	0
   739  0002D6  6E26               	movwf	_normalCountUpFlag^0,c
   740  0002D8                     l1020:
   741                           
   742                           ;main.c: 239:             if (!pRA5) state = 0;
   743  0002D8  5019               	movf	_pRA5^0,w,c
   744  0002DA  101A               	iorwf	(_pRA5+1)^0,w,c
   745  0002DC  A4D8               	btfss	status,2,c
   746  0002DE  EF73  F001         	goto	u231
   747  0002E2  EF75  F001         	goto	u230
   748  0002E6                     u231:
   749  0002E6  EF79  F001         	goto	l1024
   750  0002EA                     u230:
   751  0002EA  0E00               	movlw	0
   752  0002EC  6E22               	movwf	(_state+1)^0,c
   753  0002EE  0E00               	movlw	0
   754  0002F0  6E21               	movwf	_state^0,c
   755  0002F2                     l1024:
   756                           
   757                           ;main.c: 240:             if (pRA5_3s) state = 3;
   758  0002F2  5015               	movf	_pRA5_3s^0,w,c
   759  0002F4  1016               	iorwf	(_pRA5_3s+1)^0,w,c
   760  0002F6  B4D8               	btfsc	status,2,c
   761  0002F8  EF80  F001         	goto	u241
   762  0002FC  EF82  F001         	goto	u240
   763  000300                     u241:
   764  000300  EF25  F002         	goto	l180
   765  000304                     u240:
   766  000304  0E00               	movlw	0
   767  000306  6E22               	movwf	(_state+1)^0,c
   768  000308  0E03               	movlw	3
   769  00030A  6E21               	movwf	_state^0,c
   770  00030C  EF25  F002         	goto	l180
   771  000310                     l1028:
   772                           
   773                           ;main.c: 243:             if (fastCountUpFlag == 1) {
   774  000310  0425               	decf	_fastCountUpFlag^0,w,c
   775  000312  A4D8               	btfss	status,2,c
   776  000314  EF8E  F001         	goto	u251
   777  000318  EF90  F001         	goto	u250
   778  00031C                     u251:
   779  00031C  EF93  F001         	goto	l1034
   780  000320                     u250:
   781  000320                     
   782                           ;main.c: 244:                 fastCountUpFlag = 0;
   783  000320  0E00               	movlw	0
   784  000322  6E25               	movwf	_fastCountUpFlag^0,c
   785  000324                     
   786                           ;main.c: 245:                 LATD++;
   787  000324  2A8C               	incf	140,f,c	;volatile
   788  000326                     l1034:
   789                           
   790                           ;main.c: 247:             if (!pRA5) state = 0;
   791  000326  5019               	movf	_pRA5^0,w,c
   792  000328  101A               	iorwf	(_pRA5+1)^0,w,c
   793  00032A  A4D8               	btfss	status,2,c
   794  00032C  EF9A  F001         	goto	u261
   795  000330  EF9C  F001         	goto	u260
   796  000334                     u261:
   797  000334  EF25  F002         	goto	l180
   798  000338                     u260:
   799  000338  EF4C  F001         	goto	l1008
   800  00033C                     l1038:
   801                           
   802                           ;main.c: 250:             if (!pRB0) state = 0;
   803  00033C  501F               	movf	_pRB0^0,w,c
   804  00033E  1020               	iorwf	(_pRB0+1)^0,w,c
   805  000340  A4D8               	btfss	status,2,c
   806  000342  EFA5  F001         	goto	u271
   807  000346  EFA7  F001         	goto	u270
   808  00034A                     u271:
   809  00034A  EFAD  F001         	goto	l1042
   810  00034E                     u270:
   811  00034E                     l1040:
   812  00034E  0E00               	movlw	0
   813  000350  6E22               	movwf	(_state+1)^0,c
   814  000352  0E00               	movlw	0
   815  000354  6E21               	movwf	_state^0,c
   816  000356  EFBA  F001         	goto	l1046
   817  00035A                     l1042:
   818  00035A  501D               	movf	_pRB0_1s^0,w,c
   819  00035C  101E               	iorwf	(_pRB0_1s+1)^0,w,c
   820  00035E  B4D8               	btfsc	status,2,c
   821  000360  EFB4  F001         	goto	u281
   822  000364  EFB6  F001         	goto	u280
   823  000368                     u281:
   824  000368  EFBA  F001         	goto	l1046
   825  00036C                     u280:
   826  00036C  0E00               	movlw	0
   827  00036E  6E22               	movwf	(_state+1)^0,c
   828  000370  0E05               	movlw	5
   829  000372  6E21               	movwf	_state^0,c
   830  000374                     l1046:
   831                           
   832                           ;main.c: 252:             checkRA5();
   833  000374  ECAA  F002         	call	_checkRA5	;wreg free
   834                           
   835                           ;main.c: 253:             break;
   836  000378  EF25  F002         	goto	l180
   837  00037C                     l1048:
   838                           
   839                           ;main.c: 255:             if (normalCountDownFlag == 1) {
   840  00037C  0424               	decf	_normalCountDownFlag^0,w,c
   841  00037E  A4D8               	btfss	status,2,c
   842  000380  EFC4  F001         	goto	u291
   843  000384  EFC6  F001         	goto	u290
   844  000388                     u291:
   845  000388  EFC9  F001         	goto	l1054
   846  00038C                     u290:
   847  00038C                     
   848                           ;main.c: 256:                 normalCountDownFlag = 0;
   849  00038C  0E00               	movlw	0
   850  00038E  6E24               	movwf	_normalCountDownFlag^0,c
   851  000390                     
   852                           ;main.c: 257:                 LATD--;
   853  000390  068C               	decf	140,f,c	;volatile
   854  000392                     l1054:
   855                           
   856                           ;main.c: 259:             if (!pRB0) state = 0;
   857  000392  501F               	movf	_pRB0^0,w,c
   858  000394  1020               	iorwf	(_pRB0+1)^0,w,c
   859  000396  A4D8               	btfss	status,2,c
   860  000398  EFD0  F001         	goto	u301
   861  00039C  EFD2  F001         	goto	u300
   862  0003A0                     u301:
   863  0003A0  EFD6  F001         	goto	l1058
   864  0003A4                     u300:
   865  0003A4  0E00               	movlw	0
   866  0003A6  6E22               	movwf	(_state+1)^0,c
   867  0003A8  0E00               	movlw	0
   868  0003AA  6E21               	movwf	_state^0,c
   869  0003AC                     l1058:
   870                           
   871                           ;main.c: 260:             if (pRB0_3s) state = 6;
   872  0003AC  501B               	movf	_pRB0_3s^0,w,c
   873  0003AE  101C               	iorwf	(_pRB0_3s+1)^0,w,c
   874  0003B0  B4D8               	btfsc	status,2,c
   875  0003B2  EFDD  F001         	goto	u311
   876  0003B6  EFDF  F001         	goto	u310
   877  0003BA                     u311:
   878  0003BA  EFBA  F001         	goto	l1046
   879  0003BE                     u310:
   880  0003BE  0E00               	movlw	0
   881  0003C0  6E22               	movwf	(_state+1)^0,c
   882  0003C2  0E06               	movlw	6
   883  0003C4  6E21               	movwf	_state^0,c
   884  0003C6  EFBA  F001         	goto	l1046
   885  0003CA                     l1064:
   886                           
   887                           ;main.c: 264:             if (fastCountDownFlag == 1){
   888  0003CA  0423               	decf	_fastCountDownFlag^0,w,c
   889  0003CC  A4D8               	btfss	status,2,c
   890  0003CE  EFEB  F001         	goto	u321
   891  0003D2  EFED  F001         	goto	u320
   892  0003D6                     u321:
   893  0003D6  EFF0  F001         	goto	l1070
   894  0003DA                     u320:
   895  0003DA                     
   896                           ;main.c: 265:                 fastCountDownFlag = 0;
   897  0003DA  0E00               	movlw	0
   898  0003DC  6E23               	movwf	_fastCountDownFlag^0,c
   899  0003DE                     
   900                           ;main.c: 266:                 LATD--;
   901  0003DE  068C               	decf	140,f,c	;volatile
   902  0003E0                     l1070:
   903                           
   904                           ;main.c: 268:             if (!pRB0) state = 0;
   905  0003E0  501F               	movf	_pRB0^0,w,c
   906  0003E2  1020               	iorwf	(_pRB0+1)^0,w,c
   907  0003E4  A4D8               	btfss	status,2,c
   908  0003E6  EFF7  F001         	goto	u331
   909  0003EA  EFF9  F001         	goto	u330
   910  0003EE                     u331:
   911  0003EE  EFBA  F001         	goto	l1046
   912  0003F2                     u330:
   913  0003F2  EFA7  F001         	goto	l1040
   914  0003F6                     l1078:
   915  0003F6  C021  F02A         	movff	_state,??_FSM
   916  0003FA  C022  F02B         	movff	_state+1,??_FSM+1
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ;	Chosen strategy is simple_byte
   925  0003FE  502B               	movf	(??_FSM+1)^0,w,c
   926  000400  0A00               	xorlw	0	; case 0
   927  000402  B4D8               	btfsc	status,2,c
   928  000404  EF06  F002         	goto	l1204
   929  000408  EF25  F002         	goto	l180
   930  00040C                     l1204:
   931                           
   932                           ; Switch size 1, requested type "simple"
   933                           ; Number of cases is 7, Range of values is 0 to 6
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte           22    12 (average)
   937                           ;	Chosen strategy is simple_byte
   938  00040C  502A               	movf	??_FSM^0,w,c
   939  00040E  0A00               	xorlw	0	; case 0
   940  000410  B4D8               	btfsc	status,2,c
   941  000412  EF23  F001         	goto	l994
   942  000416  0A01               	xorlw	1	; case 1
   943  000418  B4D8               	btfsc	status,2,c
   944  00041A  EF43  F001         	goto	l1006
   945  00041E  0A03               	xorlw	3	; case 2
   946  000420  B4D8               	btfsc	status,2,c
   947  000422  EF61  F001         	goto	l1014
   948  000426  0A01               	xorlw	1	; case 3
   949  000428  B4D8               	btfsc	status,2,c
   950  00042A  EF88  F001         	goto	l1028
   951  00042E  0A07               	xorlw	7	; case 4
   952  000430  B4D8               	btfsc	status,2,c
   953  000432  EF9E  F001         	goto	l1038
   954  000436  0A01               	xorlw	1	; case 5
   955  000438  B4D8               	btfsc	status,2,c
   956  00043A  EFBE  F001         	goto	l1048
   957  00043E  0A03               	xorlw	3	; case 6
   958  000440  B4D8               	btfsc	status,2,c
   959  000442  EFE5  F001         	goto	l1064
   960  000446  EF25  F002         	goto	l180
   961  00044A                     l180:
   962  00044A  0012               	return		;funcret
   963  00044C                     __end_of_FSM:
   964                           	opt callstack 0
   965                           
   966 ;; *************** function _checkRA5 *****************
   967 ;; Defined at:
   968 ;;		line 212 in file "main.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    3
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_FSM
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text9
   997  000554                     __ptext9:
   998                           	opt callstack 0
   999  000554                     _checkRA5:
  1000                           	opt callstack 26
  1001  000554                     
  1002                           ;main.c: 213:     if (pRA5) {
  1003  000554  5019               	movf	_pRA5^0,w,c
  1004  000556  101A               	iorwf	(_pRA5+1)^0,w,c
  1005  000558  B4D8               	btfsc	status,2,c
  1006  00055A  EFB1  F002         	goto	u71
  1007  00055E  EFB3  F002         	goto	u70
  1008  000562                     u71:
  1009  000562  EFB8  F002         	goto	l149
  1010  000566                     u70:
  1011  000566                     
  1012                           ;main.c: 214:         LATD++;
  1013  000566  2A8C               	incf	140,f,c	;volatile
  1014  000568                     
  1015                           ;main.c: 215:         state = 1;
  1016  000568  0E00               	movlw	0
  1017  00056A  6E22               	movwf	(_state+1)^0,c
  1018  00056C  0E01               	movlw	1
  1019  00056E  6E21               	movwf	_state^0,c
  1020  000570                     l149:
  1021  000570  0012               	return		;funcret
  1022  000572                     __end_of_checkRA5:
  1023                           	opt callstack 0
  1024                           
  1025 ;; *************** function _CheckButtonsPress *****************
  1026 ;; Defined at:
  1027 ;;		line 204 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    2
  1048 ;; This function calls:
  1049 ;;		_TMR1_ISR
  1050 ;; This function is called by:
  1051 ;;		Interrupt level 2
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	intcode
  1056  000008                     __pintcode:
  1057                           	opt callstack 0
  1058  000008                     _CheckButtonsPress:
  1059                           	opt callstack 25
  1060                           
  1061                           ;incstack = 0
  1062  000008  822E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1063  00000A  ED88  F002         	call	int_func,f	;refresh shadow registers
  1064                           
  1065                           	psect	intcode_body
  1066  000510                     __pintcode_body:
  1067                           	opt callstack 25
  1068  000510                     int_func:
  1069                           	opt callstack 25
  1070  000510  0006               	pop		; remove dummy address from shadow register refresh
  1071  000512                     
  1072                           ;main.c: 205:     if (PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1) {
  1073  000512  A09D               	btfss	157,0,c	;volatile
  1074  000514  EF8E  F002         	goto	i2u52_41
  1075  000518  EF90  F002         	goto	i2u52_40
  1076  00051C                     i2u52_41:
  1077  00051C  EF99  F002         	goto	i2l145
  1078  000520                     i2u52_40:
  1079  000520  A09E               	btfss	158,0,c	;volatile
  1080  000522  EF95  F002         	goto	i2u53_41
  1081  000526  EF97  F002         	goto	i2u53_40
  1082  00052A                     i2u53_41:
  1083  00052A  EF99  F002         	goto	i2l145
  1084  00052E                     i2u53_40:
  1085  00052E                     
  1086                           ;main.c: 206:         TMR1_ISR();
  1087  00052E  EC09  F000         	call	_TMR1_ISR	;wreg free
  1088  000532                     i2l145:
  1089  000532  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1090  000534  0011               	retfie		f
  1091  000536                     __end_of_CheckButtonsPress:
  1092                           	opt callstack 0
  1093                           
  1094 ;; *************** function _TMR1_ISR *****************
  1095 ;; Defined at:
  1096 ;;		line 142 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    1
  1117 ;; This function calls:
  1118 ;;		_TMR1_Reload
  1119 ;;		_readButtonRA5
  1120 ;;		_readButtonRB0
  1121 ;; This function is called by:
  1122 ;;		_CheckButtonsPress
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text11
  1127  000012                     __ptext11:
  1128                           	opt callstack 0
  1129  000012                     _TMR1_ISR:
  1130                           	opt callstack 25
  1131  000012                     
  1132                           ;main.c: 143:     PIR1bits.TMR1IF = 0;
  1133  000012  909E               	bcf	158,0,c	;volatile
  1134  000014                     
  1135                           ;main.c: 144:     TMR1_Reload();
  1136  000014  ECE5  F002         	call	_TMR1_Reload	;wreg free
  1137  000018                     
  1138                           ;main.c: 145:     if (readButtonRA5()) {
  1139  000018  EC57  F002         	call	_readButtonRA5	;wreg free
  1140  00001C  5027               	movf	?_readButtonRA5^0,w,c
  1141  00001E  1028               	iorwf	(?_readButtonRA5+1)^0,w,c
  1142  000020  B4D8               	btfsc	status,2,c
  1143  000022  EF15  F000         	goto	i2u42_41
  1144  000026  EF17  F000         	goto	i2u42_40
  1145  00002A                     i2u42_41:
  1146  00002A  EF7F  F000         	goto	i2l1166
  1147  00002E                     i2u42_40:
  1148  00002E                     
  1149                           ;main.c: 146:         pCountRB0 = 0;
  1150  00002E  0E00               	movlw	0
  1151  000030  6E12               	movwf	(_pCountRB0+1)^0,c
  1152  000032  0E00               	movlw	0
  1153  000034  6E11               	movwf	_pCountRB0^0,c
  1154                           
  1155                           ;main.c: 147:         pRA5 = 1;
  1156  000036  0E00               	movlw	0
  1157  000038  6E1A               	movwf	(_pRA5+1)^0,c
  1158  00003A  0E01               	movlw	1
  1159  00003C  6E19               	movwf	_pRA5^0,c
  1160  00003E                     
  1161                           ;main.c: 148:         pCountRA5++;
  1162  00003E  4A13               	infsnz	_pCountRA5^0,f,c
  1163  000040  2A14               	incf	(_pCountRA5+1)^0,f,c
  1164  000042                     
  1165                           ;main.c: 149:         if (pCountRA5 > 300) {
  1166  000042  BE14               	btfsc	(_pCountRA5+1)^0,7,c
  1167  000044  EF2D  F000         	goto	i2u43_41
  1168  000048  0E2D               	movlw	45
  1169  00004A  5C13               	subwf	_pCountRA5^0,w,c
  1170  00004C  0E01               	movlw	1
  1171  00004E  5814               	subwfb	(_pCountRA5+1)^0,w,c
  1172  000050  A0D8               	btfss	status,0,c
  1173  000052  EF2D  F000         	goto	i2u43_41
  1174  000056  EF2F  F000         	goto	i2u43_40
  1175  00005A                     i2u43_41:
  1176  00005A  EF4F  F000         	goto	i2l1156
  1177  00005E                     i2u43_40:
  1178  00005E                     
  1179                           ;main.c: 150:             pRA5_1s = 0;
  1180  00005E  0E00               	movlw	0
  1181  000060  6E18               	movwf	(_pRA5_1s+1)^0,c
  1182  000062  0E00               	movlw	0
  1183  000064  6E17               	movwf	_pRA5_1s^0,c
  1184                           
  1185                           ;main.c: 151:             pRA5_3s = 1;
  1186  000066  0E00               	movlw	0
  1187  000068  6E16               	movwf	(_pRA5_3s+1)^0,c
  1188  00006A  0E01               	movlw	1
  1189  00006C  6E15               	movwf	_pRA5_3s^0,c
  1190  00006E                     
  1191                           ;main.c: 152:             countRA5_300ms++;
  1192  00006E  4A0D               	infsnz	_countRA5_300ms^0,f,c
  1193  000070  2A0E               	incf	(_countRA5_300ms+1)^0,f,c
  1194  000072                     
  1195                           ;main.c: 153:             if (countRA5_300ms >= 10) {
  1196  000072  BE0E               	btfsc	(_countRA5_300ms+1)^0,7,c
  1197  000074  EF45  F000         	goto	i2u44_41
  1198  000078  500E               	movf	(_countRA5_300ms+1)^0,w,c
  1199  00007A  E109               	bnz	i2u44_40
  1200  00007C  0E0A               	movlw	10
  1201  00007E  5C0D               	subwf	_countRA5_300ms^0,w,c
  1202  000080  A0D8               	btfss	status,0,c
  1203  000082  EF45  F000         	goto	i2u44_41
  1204  000086  EF47  F000         	goto	i2u44_40
  1205  00008A                     i2u44_41:
  1206  00008A  EF20  F001         	goto	i2l138
  1207  00008E                     i2u44_40:
  1208  00008E                     
  1209                           ;main.c: 154:                 fastCountUpFlag = 1;
  1210  00008E  0E01               	movlw	1
  1211  000090  6E25               	movwf	_fastCountUpFlag^0,c
  1212                           
  1213                           ;main.c: 155:                 countRA5_300ms = 0;
  1214  000092  0E00               	movlw	0
  1215  000094  6E0E               	movwf	(_countRA5_300ms+1)^0,c
  1216  000096  0E00               	movlw	0
  1217  000098  6E0D               	movwf	_countRA5_300ms^0,c
  1218  00009A  EF20  F001         	goto	i2l138
  1219  00009E                     i2l1156:
  1220  00009E  BE14               	btfsc	(_pCountRA5+1)^0,7,c
  1221  0000A0  EF5B  F000         	goto	i2u45_41
  1222  0000A4  5014               	movf	(_pCountRA5+1)^0,w,c
  1223  0000A6  E109               	bnz	i2u45_40
  1224  0000A8  0E65               	movlw	101
  1225  0000AA  5C13               	subwf	_pCountRA5^0,w,c
  1226  0000AC  A0D8               	btfss	status,0,c
  1227  0000AE  EF5B  F000         	goto	i2u45_41
  1228  0000B2  EF5D  F000         	goto	i2u45_40
  1229  0000B6                     i2u45_41:
  1230  0000B6  EF20  F001         	goto	i2l138
  1231  0000BA                     i2u45_40:
  1232  0000BA                     
  1233                           ;main.c: 158:             pRA5_3s = 0;
  1234  0000BA  0E00               	movlw	0
  1235  0000BC  6E16               	movwf	(_pRA5_3s+1)^0,c
  1236  0000BE  0E00               	movlw	0
  1237  0000C0  6E15               	movwf	_pRA5_3s^0,c
  1238                           
  1239                           ;main.c: 159:             pRA5_1s = 1;
  1240  0000C2  0E00               	movlw	0
  1241  0000C4  6E18               	movwf	(_pRA5_1s+1)^0,c
  1242  0000C6  0E01               	movlw	1
  1243  0000C8  6E17               	movwf	_pRA5_1s^0,c
  1244  0000CA                     
  1245                           ;main.c: 160:             countRA5_100ms++;
  1246  0000CA  4A0F               	infsnz	_countRA5_100ms^0,f,c
  1247  0000CC  2A10               	incf	(_countRA5_100ms+1)^0,f,c
  1248  0000CE                     
  1249                           ;main.c: 161:             if (countRA5_100ms >= 50) {
  1250  0000CE  BE10               	btfsc	(_countRA5_100ms+1)^0,7,c
  1251  0000D0  EF73  F000         	goto	i2u46_41
  1252  0000D4  5010               	movf	(_countRA5_100ms+1)^0,w,c
  1253  0000D6  E109               	bnz	i2u46_40
  1254  0000D8  0E32               	movlw	50
  1255  0000DA  5C0F               	subwf	_countRA5_100ms^0,w,c
  1256  0000DC  A0D8               	btfss	status,0,c
  1257  0000DE  EF73  F000         	goto	i2u46_41
  1258  0000E2  EF75  F000         	goto	i2u46_40
  1259  0000E6                     i2u46_41:
  1260  0000E6  EF7D  F000         	goto	i2l127
  1261  0000EA                     i2u46_40:
  1262  0000EA                     
  1263                           ;main.c: 162:                 normalCountUpFlag = 1;
  1264  0000EA  0E01               	movlw	1
  1265  0000EC  6E26               	movwf	_normalCountUpFlag^0,c
  1266                           
  1267                           ;main.c: 163:                 countRA5_100ms = 0;
  1268  0000EE  0E00               	movlw	0
  1269  0000F0  6E10               	movwf	(_countRA5_100ms+1)^0,c
  1270  0000F2  0E00               	movlw	0
  1271  0000F4  6E0F               	movwf	_countRA5_100ms^0,c
  1272  0000F6  EF20  F001         	goto	i2l138
  1273  0000FA                     i2l127:
  1274                           
  1275                           ;main.c: 166:     } else if (readButtonRB0()) {
  1276  0000FA  EF20  F001         	goto	i2l138
  1277  0000FE                     i2l1166:
  1278  0000FE  EC26  F002         	call	_readButtonRB0	;wreg free
  1279  000102  5027               	movf	?_readButtonRB0^0,w,c
  1280  000104  1028               	iorwf	(?_readButtonRB0+1)^0,w,c
  1281  000106  B4D8               	btfsc	status,2,c
  1282  000108  EF88  F000         	goto	i2u47_41
  1283  00010C  EF8A  F000         	goto	i2u47_40
  1284  000110                     i2u47_41:
  1285  000110  EFF0  F000         	goto	i2l1192
  1286  000114                     i2u47_40:
  1287  000114                     
  1288                           ;main.c: 167:         pCountRA5 = 0;
  1289  000114  0E00               	movlw	0
  1290  000116  6E14               	movwf	(_pCountRA5+1)^0,c
  1291  000118  0E00               	movlw	0
  1292  00011A  6E13               	movwf	_pCountRA5^0,c
  1293                           
  1294                           ;main.c: 168:         pRB0 = 1;
  1295  00011C  0E00               	movlw	0
  1296  00011E  6E20               	movwf	(_pRB0+1)^0,c
  1297  000120  0E01               	movlw	1
  1298  000122  6E1F               	movwf	_pRB0^0,c
  1299  000124                     
  1300                           ;main.c: 169:         pCountRB0++;
  1301  000124  4A11               	infsnz	_pCountRB0^0,f,c
  1302  000126  2A12               	incf	(_pCountRB0+1)^0,f,c
  1303  000128                     
  1304                           ;main.c: 170:         if (pCountRB0 > 300) {
  1305  000128  BE12               	btfsc	(_pCountRB0+1)^0,7,c
  1306  00012A  EFA0  F000         	goto	i2u48_41
  1307  00012E  0E2D               	movlw	45
  1308  000130  5C11               	subwf	_pCountRB0^0,w,c
  1309  000132  0E01               	movlw	1
  1310  000134  5812               	subwfb	(_pCountRB0+1)^0,w,c
  1311  000136  A0D8               	btfss	status,0,c
  1312  000138  EFA0  F000         	goto	i2u48_41
  1313  00013C  EFA2  F000         	goto	i2u48_40
  1314  000140                     i2u48_41:
  1315  000140  EFC2  F000         	goto	i2l1182
  1316  000144                     i2u48_40:
  1317  000144                     
  1318                           ;main.c: 171:             pRB0_1s = 0;
  1319  000144  0E00               	movlw	0
  1320  000146  6E1E               	movwf	(_pRB0_1s+1)^0,c
  1321  000148  0E00               	movlw	0
  1322  00014A  6E1D               	movwf	_pRB0_1s^0,c
  1323                           
  1324                           ;main.c: 172:             pRB0_3s = 1;
  1325  00014C  0E00               	movlw	0
  1326  00014E  6E1C               	movwf	(_pRB0_3s+1)^0,c
  1327  000150  0E01               	movlw	1
  1328  000152  6E1B               	movwf	_pRB0_3s^0,c
  1329  000154                     
  1330                           ;main.c: 173:             countRB0_300ms++;
  1331  000154  4A09               	infsnz	_countRB0_300ms^0,f,c
  1332  000156  2A0A               	incf	(_countRB0_300ms+1)^0,f,c
  1333  000158                     
  1334                           ;main.c: 174:             if (countRB0_300ms > 10) {
  1335  000158  BE0A               	btfsc	(_countRB0_300ms+1)^0,7,c
  1336  00015A  EFB8  F000         	goto	i2u49_41
  1337  00015E  500A               	movf	(_countRB0_300ms+1)^0,w,c
  1338  000160  E109               	bnz	i2u49_40
  1339  000162  0E0B               	movlw	11
  1340  000164  5C09               	subwf	_countRB0_300ms^0,w,c
  1341  000166  A0D8               	btfss	status,0,c
  1342  000168  EFB8  F000         	goto	i2u49_41
  1343  00016C  EFBA  F000         	goto	i2u49_40
  1344  000170                     i2u49_41:
  1345  000170  EF20  F001         	goto	i2l138
  1346  000174                     i2u49_40:
  1347  000174                     
  1348                           ;main.c: 175:                 fastCountDownFlag = 1;
  1349  000174  0E01               	movlw	1
  1350  000176  6E23               	movwf	_fastCountDownFlag^0,c
  1351                           
  1352                           ;main.c: 176:                 countRB0_300ms = 0;
  1353  000178  0E00               	movlw	0
  1354  00017A  6E0A               	movwf	(_countRB0_300ms+1)^0,c
  1355  00017C  0E00               	movlw	0
  1356  00017E  6E09               	movwf	_countRB0_300ms^0,c
  1357  000180  EF20  F001         	goto	i2l138
  1358  000184                     i2l1182:
  1359  000184  BE12               	btfsc	(_pCountRB0+1)^0,7,c
  1360  000186  EFCE  F000         	goto	i2u50_41
  1361  00018A  5012               	movf	(_pCountRB0+1)^0,w,c
  1362  00018C  E109               	bnz	i2u50_40
  1363  00018E  0E65               	movlw	101
  1364  000190  5C11               	subwf	_pCountRB0^0,w,c
  1365  000192  A0D8               	btfss	status,0,c
  1366  000194  EFCE  F000         	goto	i2u50_41
  1367  000198  EFD0  F000         	goto	i2u50_40
  1368  00019C                     i2u50_41:
  1369  00019C  EF20  F001         	goto	i2l138
  1370  0001A0                     i2u50_40:
  1371  0001A0                     
  1372                           ;main.c: 180:             pRB0_3s = 0;
  1373  0001A0  0E00               	movlw	0
  1374  0001A2  6E1C               	movwf	(_pRB0_3s+1)^0,c
  1375  0001A4  0E00               	movlw	0
  1376  0001A6  6E1B               	movwf	_pRB0_3s^0,c
  1377                           
  1378                           ;main.c: 181:             pRB0_1s = 1;
  1379  0001A8  0E00               	movlw	0
  1380  0001AA  6E1E               	movwf	(_pRB0_1s+1)^0,c
  1381  0001AC  0E01               	movlw	1
  1382  0001AE  6E1D               	movwf	_pRB0_1s^0,c
  1383  0001B0                     
  1384                           ;main.c: 182:             countRB0_100ms++;
  1385  0001B0  4A0B               	infsnz	_countRB0_100ms^0,f,c
  1386  0001B2  2A0C               	incf	(_countRB0_100ms+1)^0,f,c
  1387  0001B4                     
  1388                           ;main.c: 183:             if (countRB0_100ms >= 50) {
  1389  0001B4  BE0C               	btfsc	(_countRB0_100ms+1)^0,7,c
  1390  0001B6  EFE6  F000         	goto	i2u51_41
  1391  0001BA  500C               	movf	(_countRB0_100ms+1)^0,w,c
  1392  0001BC  E109               	bnz	i2u51_40
  1393  0001BE  0E32               	movlw	50
  1394  0001C0  5C0B               	subwf	_countRB0_100ms^0,w,c
  1395  0001C2  A0D8               	btfss	status,0,c
  1396  0001C4  EFE6  F000         	goto	i2u51_41
  1397  0001C8  EFE8  F000         	goto	i2u51_40
  1398  0001CC                     i2u51_41:
  1399  0001CC  EF7D  F000         	goto	i2l127
  1400  0001D0                     i2u51_40:
  1401  0001D0                     
  1402                           ;main.c: 184:                 normalCountDownFlag = 1;
  1403  0001D0  0E01               	movlw	1
  1404  0001D2  6E24               	movwf	_normalCountDownFlag^0,c
  1405                           
  1406                           ;main.c: 185:                 countRB0_100ms = 0;
  1407  0001D4  0E00               	movlw	0
  1408  0001D6  6E0C               	movwf	(_countRB0_100ms+1)^0,c
  1409  0001D8  0E00               	movlw	0
  1410  0001DA  6E0B               	movwf	_countRB0_100ms^0,c
  1411  0001DC  EF20  F001         	goto	i2l138
  1412  0001E0                     i2l1192:
  1413                           
  1414                           ;main.c: 189:         pCountRA5 = 0;
  1415  0001E0  0E00               	movlw	0
  1416  0001E2  6E14               	movwf	(_pCountRA5+1)^0,c
  1417  0001E4  0E00               	movlw	0
  1418  0001E6  6E13               	movwf	_pCountRA5^0,c
  1419                           
  1420                           ;main.c: 190:         pCountRB0 = 0;
  1421  0001E8  0E00               	movlw	0
  1422  0001EA  6E12               	movwf	(_pCountRB0+1)^0,c
  1423  0001EC  0E00               	movlw	0
  1424  0001EE  6E11               	movwf	_pCountRB0^0,c
  1425                           
  1426                           ;main.c: 191:         pRA5 = 0;
  1427  0001F0  0E00               	movlw	0
  1428  0001F2  6E1A               	movwf	(_pRA5+1)^0,c
  1429  0001F4  0E00               	movlw	0
  1430  0001F6  6E19               	movwf	_pRA5^0,c
  1431                           
  1432                           ;main.c: 192:         pRA5_1s = 0;
  1433  0001F8  0E00               	movlw	0
  1434  0001FA  6E18               	movwf	(_pRA5_1s+1)^0,c
  1435  0001FC  0E00               	movlw	0
  1436  0001FE  6E17               	movwf	_pRA5_1s^0,c
  1437                           
  1438                           ;main.c: 193:         pRA5_3s = 0;
  1439  000200  0E00               	movlw	0
  1440  000202  6E16               	movwf	(_pRA5_3s+1)^0,c
  1441  000204  0E00               	movlw	0
  1442  000206  6E15               	movwf	_pRA5_3s^0,c
  1443                           
  1444                           ;main.c: 194:         pRB0 = 0;
  1445  000208  0E00               	movlw	0
  1446  00020A  6E20               	movwf	(_pRB0+1)^0,c
  1447  00020C  0E00               	movlw	0
  1448  00020E  6E1F               	movwf	_pRB0^0,c
  1449                           
  1450                           ;main.c: 195:         pRB0_1s = 0;
  1451  000210  0E00               	movlw	0
  1452  000212  6E1E               	movwf	(_pRB0_1s+1)^0,c
  1453  000214  0E00               	movlw	0
  1454  000216  6E1D               	movwf	_pRB0_1s^0,c
  1455                           
  1456                           ;main.c: 196:         pRB0_3s = 0;
  1457  000218  0E00               	movlw	0
  1458  00021A  6E1C               	movwf	(_pRB0_3s+1)^0,c
  1459  00021C  0E00               	movlw	0
  1460  00021E  6E1B               	movwf	_pRB0_3s^0,c
  1461                           
  1462                           ;main.c: 197:         countRA5_100ms = 0;
  1463  000220  0E00               	movlw	0
  1464  000222  6E10               	movwf	(_countRA5_100ms+1)^0,c
  1465  000224  0E00               	movlw	0
  1466  000226  6E0F               	movwf	_countRA5_100ms^0,c
  1467                           
  1468                           ;main.c: 198:         countRA5_300ms = 0;
  1469  000228  0E00               	movlw	0
  1470  00022A  6E0E               	movwf	(_countRA5_300ms+1)^0,c
  1471  00022C  0E00               	movlw	0
  1472  00022E  6E0D               	movwf	_countRA5_300ms^0,c
  1473                           
  1474                           ;main.c: 199:         countRB0_100ms = 0;
  1475  000230  0E00               	movlw	0
  1476  000232  6E0C               	movwf	(_countRB0_100ms+1)^0,c
  1477  000234  0E00               	movlw	0
  1478  000236  6E0B               	movwf	_countRB0_100ms^0,c
  1479                           
  1480                           ;main.c: 200:         countRB0_300ms = 0;
  1481  000238  0E00               	movlw	0
  1482  00023A  6E0A               	movwf	(_countRB0_300ms+1)^0,c
  1483  00023C  0E00               	movlw	0
  1484  00023E  6E09               	movwf	_countRB0_300ms^0,c
  1485  000240                     i2l138:
  1486  000240  0012               	return		;funcret
  1487  000242                     __end_of_TMR1_ISR:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function _readButtonRB0 *****************
  1491 ;; Defined at:
  1492 ;;		line 126 in file "main.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  2    0[COMRAM] int 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;Total ram usage:        3 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_TMR1_ISR
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text12
  1520  00044C                     __ptext12:
  1521                           	opt callstack 0
  1522  00044C                     _readButtonRB0:
  1523                           	opt callstack 25
  1524  00044C                     
  1525                           ;main.c: 127:     firstReadRB0 = secondReadRB0;
  1526  00044C  C001  F003         	movff	_secondReadRB0,_firstReadRB0
  1527  000450  C002  F004         	movff	_secondReadRB0+1,_firstReadRB0+1
  1528  000454                     
  1529                           ;main.c: 128:     secondReadRB0 = PORTBbits.RB0;
  1530  000454  B081               	btfsc	129,0,c	;volatile
  1531  000456  EF2F  F002         	goto	i2u36_41
  1532  00045A  EF33  F002         	goto	i2u36_40
  1533  00045E                     i2u36_41:
  1534  00045E  6A29               	clrf	??_readButtonRB0^0,c
  1535  000460  2A29               	incf	??_readButtonRB0^0,f,c
  1536  000462  EF34  F002         	goto	i2u36_48
  1537  000466                     i2u36_40:
  1538  000466  6A29               	clrf	??_readButtonRB0^0,c
  1539  000468                     i2u36_48:
  1540  000468  5029               	movf	??_readButtonRB0^0,w,c
  1541  00046A  6E01               	movwf	_secondReadRB0^0,c
  1542  00046C  6A02               	clrf	(_secondReadRB0+1)^0,c
  1543  00046E                     
  1544                           ;main.c: 129:     if (firstReadRB0 == secondReadRB0)
  1545  00046E  5001               	movf	_secondReadRB0^0,w,c
  1546  000470  1803               	xorwf	_firstReadRB0^0,w,c
  1547  000472  E107               	bnz	i2u37_41
  1548  000474  5002               	movf	(_secondReadRB0+1)^0,w,c
  1549  000476  1804               	xorwf	(_firstReadRB0+1)^0,w,c
  1550  000478  A4D8               	btfss	status,2,c
  1551  00047A  EF41  F002         	goto	i2u37_41
  1552  00047E  EF43  F002         	goto	i2u37_40
  1553  000482                     i2u37_41:
  1554  000482  EF52  F002         	goto	i2l1116
  1555  000486                     i2u37_40:
  1556  000486                     
  1557                           ;main.c: 130:         if (firstReadRB0 == 0) return 1;
  1558  000486  5003               	movf	_firstReadRB0^0,w,c
  1559  000488  1004               	iorwf	(_firstReadRB0+1)^0,w,c
  1560  00048A  A4D8               	btfss	status,2,c
  1561  00048C  EF4A  F002         	goto	i2u38_41
  1562  000490  EF4C  F002         	goto	i2u38_40
  1563  000494                     i2u38_41:
  1564  000494  EF52  F002         	goto	i2l1116
  1565  000498                     i2u38_40:
  1566  000498  0E00               	movlw	0
  1567  00049A  6E28               	movwf	(?_readButtonRB0+1)^0,c
  1568  00049C  0E01               	movlw	1
  1569  00049E  6E27               	movwf	?_readButtonRB0^0,c
  1570  0004A0  EF56  F002         	goto	i2l116
  1571  0004A4                     i2l1116:
  1572                           
  1573                           ;main.c: 131:     return 0;
  1574  0004A4  0E00               	movlw	0
  1575  0004A6  6E28               	movwf	(?_readButtonRB0+1)^0,c
  1576  0004A8  0E00               	movlw	0
  1577  0004AA  6E27               	movwf	?_readButtonRB0^0,c
  1578  0004AC                     i2l116:
  1579  0004AC  0012               	return		;funcret
  1580  0004AE                     __end_of_readButtonRB0:
  1581                           	opt callstack 0
  1582                           
  1583 ;; *************** function _readButtonRA5 *****************
  1584 ;; Defined at:
  1585 ;;		line 134 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2    0[COMRAM] int 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        3 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_TMR1_ISR
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text13
  1613  0004AE                     __ptext13:
  1614                           	opt callstack 0
  1615  0004AE                     _readButtonRA5:
  1616                           	opt callstack 25
  1617  0004AE                     
  1618                           ;main.c: 135:     firstReadRA5 = secondReadRA5;
  1619  0004AE  C005  F007         	movff	_secondReadRA5,_firstReadRA5
  1620  0004B2  C006  F008         	movff	_secondReadRA5+1,_firstReadRA5+1
  1621  0004B6                     
  1622                           ;main.c: 136:     secondReadRA5 = PORTAbits.RA5;
  1623  0004B6  BA80               	btfsc	128,5,c	;volatile
  1624  0004B8  EF60  F002         	goto	i2u39_41
  1625  0004BC  EF64  F002         	goto	i2u39_40
  1626  0004C0                     i2u39_41:
  1627  0004C0  6A29               	clrf	??_readButtonRA5^0,c
  1628  0004C2  2A29               	incf	??_readButtonRA5^0,f,c
  1629  0004C4  EF65  F002         	goto	i2u39_48
  1630  0004C8                     i2u39_40:
  1631  0004C8  6A29               	clrf	??_readButtonRA5^0,c
  1632  0004CA                     i2u39_48:
  1633  0004CA  5029               	movf	??_readButtonRA5^0,w,c
  1634  0004CC  6E05               	movwf	_secondReadRA5^0,c
  1635  0004CE  6A06               	clrf	(_secondReadRA5+1)^0,c
  1636  0004D0                     
  1637                           ;main.c: 137:     if (firstReadRA5 == secondReadRA5)
  1638  0004D0  5005               	movf	_secondReadRA5^0,w,c
  1639  0004D2  1807               	xorwf	_firstReadRA5^0,w,c
  1640  0004D4  E107               	bnz	i2u40_41
  1641  0004D6  5006               	movf	(_secondReadRA5+1)^0,w,c
  1642  0004D8  1808               	xorwf	(_firstReadRA5+1)^0,w,c
  1643  0004DA  A4D8               	btfss	status,2,c
  1644  0004DC  EF72  F002         	goto	i2u40_41
  1645  0004E0  EF74  F002         	goto	i2u40_40
  1646  0004E4                     i2u40_41:
  1647  0004E4  EF83  F002         	goto	i2l1132
  1648  0004E8                     i2u40_40:
  1649  0004E8                     
  1650                           ;main.c: 138:         if (firstReadRA5 == 0) return 1;
  1651  0004E8  5007               	movf	_firstReadRA5^0,w,c
  1652  0004EA  1008               	iorwf	(_firstReadRA5+1)^0,w,c
  1653  0004EC  A4D8               	btfss	status,2,c
  1654  0004EE  EF7B  F002         	goto	i2u41_41
  1655  0004F2  EF7D  F002         	goto	i2u41_40
  1656  0004F6                     i2u41_41:
  1657  0004F6  EF83  F002         	goto	i2l1132
  1658  0004FA                     i2u41_40:
  1659  0004FA  0E00               	movlw	0
  1660  0004FC  6E28               	movwf	(?_readButtonRA5+1)^0,c
  1661  0004FE  0E01               	movlw	1
  1662  000500  6E27               	movwf	?_readButtonRA5^0,c
  1663  000502  EF87  F002         	goto	i2l121
  1664  000506                     i2l1132:
  1665                           
  1666                           ;main.c: 139:     return 0;
  1667  000506  0E00               	movlw	0
  1668  000508  6E28               	movwf	(?_readButtonRA5+1)^0,c
  1669  00050A  0E00               	movlw	0
  1670  00050C  6E27               	movwf	?_readButtonRA5^0,c
  1671  00050E                     i2l121:
  1672  00050E  0012               	return		;funcret
  1673  000510                     __end_of_readButtonRA5:
  1674                           	opt callstack 0
  1675                           
  1676 ;; *************** function _TMR1_Reload *****************
  1677 ;; Defined at:
  1678 ;;		line 104 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_TMR1_ISR
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text14
  1706  0005CA                     __ptext14:
  1707                           	opt callstack 0
  1708  0005CA                     _TMR1_Reload:
  1709                           	opt callstack 25
  1710  0005CA                     
  1711                           ;main.c: 106:     TMR1H = (timerReloadVal >> 8);
  1712  0005CA  502D               	movf	(_timerReloadVal+1)^0,w,c	;volatile
  1713  0005CC  6ECF               	movwf	207,c	;volatile
  1714  0005CE                     
  1715                           ;main.c: 107:     TMR1L = (uint8_t) timerReloadVal;
  1716  0005CE  C02C  FFCE         	movff	_timerReloadVal,4046	;volatile
  1717  0005D2  0012               	return		;funcret
  1718  0005D4                     __end_of_TMR1_Reload:
  1719                           	opt callstack 0
  1720  0000                     
  1721                           	psect	rparam
  1722  0000                     
  1723                           	psect	temp
  1724  00002E                     btemp:
  1725                           	opt callstack 0
  1726  00002E                     	ds	1
  1727  0000                     int$flags	set	btemp
  1728  0000                     wtemp8	set	btemp+1
  1729  0000                     ttemp5	set	btemp+1
  1730  0000                     ttemp6	set	btemp+4
  1731  0000                     ttemp7	set	btemp+8
  1732                           tosu	equ	0xFFF
  1733                           tosh	equ	0xFFE
  1734                           tosl	equ	0xFFD
  1735                           stkptr	equ	0xFFC
  1736                           pclatu	equ	0xFFB
  1737                           pclath	equ	0xFFA
  1738                           pcl	equ	0xFF9
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           prodh	equ	0xFF4
  1744                           prodl	equ	0xFF3
  1745                           indf0	equ	0xFEF
  1746                           postinc0	equ	0xFEE
  1747                           postdec0	equ	0xFED
  1748                           preinc0	equ	0xFEC
  1749                           plusw0	equ	0xFEB
  1750                           fsr0h	equ	0xFEA
  1751                           fsr0l	equ	0xFE9
  1752                           wreg	equ	0xFE8
  1753                           indf1	equ	0xFE7
  1754                           postinc1	equ	0xFE6
  1755                           postdec1	equ	0xFE5
  1756                           preinc1	equ	0xFE4
  1757                           plusw1	equ	0xFE3
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           bsr	equ	0xFE0
  1761                           indf2	equ	0xFDF
  1762                           postinc2	equ	0xFDE
  1763                           postdec2	equ	0xFDD
  1764                           preinc2	equ	0xFDC
  1765                           plusw2	equ	0xFDB
  1766                           fsr2h	equ	0xFDA
  1767                           fsr2l	equ	0xFD9
  1768                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         38
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_FSM

Critical Paths under _CheckButtonsPress in COMRAM

    _TMR1_ISR->_readButtonRA5
    _TMR1_ISR->_readButtonRB0

Critical Paths under _main in BANK0

    None.

Critical Paths under _CheckButtonsPress in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CheckButtonsPress in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CheckButtonsPress in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CheckButtonsPress in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CheckButtonsPress in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CheckButtonsPress in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CheckButtonsPress in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CheckButtonsPress in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _CheckButtonsPress in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _CheckButtonsPress in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _CheckButtonsPress in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _CheckButtonsPress in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _CheckButtonsPress in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _CheckButtonsPress in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _CheckButtonsPress in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _CheckButtonsPress in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                                _FSM
                          _SYSTEM_IN
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_IN                                            0     0      0       0
                                _ADC
                          _INTERRUPT
                         _OSCILLATOR
                        _PIN_MANAGER
                            _TMR1_IN
 ---------------------------------------------------------------------------------
 (2) _TMR1_IN                                              0     0      0       0
                         _TMR1_Start
 ---------------------------------------------------------------------------------
 (3) _TMR1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FSM                                                  2     2      0       0
                                              3 COMRAM     2     2      0
                           _checkRA5
 ---------------------------------------------------------------------------------
 (2) _checkRA5                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _CheckButtonsPress                                    0     0      0       0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                        _TMR1_Reload
                      _readButtonRA5
                      _readButtonRB0
 ---------------------------------------------------------------------------------
 (6) _readButtonRB0                                        3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _readButtonRA5                                        3     1      2       0
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FSM
     _checkRA5
   _SYSTEM_IN
     _ADC
     _INTERRUPT
     _OSCILLATOR
     _PIN_MANAGER
     _TMR1_IN
       _TMR1_Start

 _CheckButtonsPress (ROOT)
   _TMR1_ISR
     _TMR1_Reload
     _readButtonRA5
     _readButtonRB0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5      2D       1       47.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      32        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 08:16:38 2019

                        l90 05BE                          l93 05D8                          l87 05C8  
                        l96 05DE                          l99 0552                          u70 0566  
                        u71 0562           _normalCountUpFlag 0026                         l111 059C  
                       l105 05E2                         l180 044A                         l149 0570  
                       _ADC 05DA                         l922 0554                         l930 0594  
                       l924 0566                         l932 0598                         l926 0568  
                       l870 05B6                         l872 05D4                         l864 05E0  
                       l880 054A                         l928 0588                         l874 05DA  
                       l866 05C0                         l882 054C                         l868 05B2  
                       l884 054E                         l876 0536                         l878 0542  
                       l992 0242                         l994 0246                         l996 0258  
                       l998 025A                         u200 0298                         u201 0294  
                       u210 02B6                         u211 02B2                         _FSM 0242  
                       u300 03A4                         u220 02D2                         u301 03A0  
                       u221 02CE                         u310 03BE                         u230 02EA  
                       u311 03BA                         u231 02E6                         u320 03DA  
                       u240 0304                         u321 03D6                         u241 0300  
                       u330 03F2                         u250 0320                         u331 03EE  
                       u251 031C                         u260 0338                         u180 0258  
                       u261 0334                         u181 0254                         u270 034E  
                       u190 0278                         u271 034A                         u191 0274  
                       u280 036C                         u281 0368                         u290 038C  
                       u291 0388                         wreg 000FE8                        ?_ADC 0027  
              __CFG_LVP$OFF 000000                        ?_FSM 0027                __CFG_WDT$OFF 000000  
                      l1000 0266                        l1010 02A4                        l1002 0278  
                      l1020 02D8                        l1012 02B6                        l1004 027A  
                      l1030 0320                        l1022 02EA                        l1014 02C2  
                      l1006 0286                        l1040 034E                        l1032 0324  
                      l1024 02F2                        l1016 02D2                        l1008 0298  
                      l1050 038C                        l1042 035A                        l1034 0326  
                      l1026 0304                        l1018 02D4                        l1204 040C  
                      l1060 03BE                        l1052 0390                        l1044 036C  
                      l1028 0310                        l1070 03E0                        l1054 0392  
                      l1046 0374                        l1038 033C                        l1064 03CA  
                      l1056 03A4                        l1048 037C                        l1066 03DA  
                      l1058 03AC                        l1068 03DE                        l1092 059E  
                      l1078 03F6                        l1094 05A2                        l1096 05A4  
                      l1098 05A6                        _LATD 000F8C                        _TMR1 000FCE  
                      _pRB0 001F                        _pRA5 0019             __end_of_TMR1_IN 0554  
                      _main 059E                        btemp 002E                        start 000E  
               ?_OSCILLATOR 0027               __CFG_IESO$OFF 000000         _normalCountDownFlag 0024  
        __size_of_INTERRUPT 0006               __CFG_MCLRE$ON 000000                ___param_bank 000000  
                     ??_ADC 002A                       ??_FSM 002A              _countRB0_100ms 000B  
            _countRB0_300ms 0009              _countRA5_100ms 000F              _countRA5_300ms 000D  
                     ?_main 0027                       _T1CON 000FCD                       i2l102 05D2  
                     i2l121 050E                       i2l116 04AC                       i2l127 00FA  
                     i2l145 0532                       i2l138 0240                       i2l886 05CA  
                     i2l888 05CE                       _TMR1H 000FCF                       _TMR1L 000FCE  
                     _TRISD 000F95               __CFG_PWRT$OFF 000000              __CFG_FCMEN$OFF 000000  
          __end_of_TMR1_ISR 0242                 ?_TMR1_Start 0027  __size_of_CheckButtonsPress 052E  
                     _state 0021              __CFG_BOREN$OFF 000000                       ttemp5 002F  
                     ttemp6 0032                       ttemp7 0036                       status 000FD8  
                     wtemp8 002F             __initialization 0572          __size_of_SYSTEM_IN 0016  
              __end_of_main 05B2                ?_PIN_MANAGER 0027              __CFG_OSC$HSPLL 000000  
                    ??_main 002C               __activetblptr 000003      __size_of_readButtonRB0 0062  
    __size_of_readButtonRA5 0062         __size_of_OSCILLATOR 000A           __end_of_INTERRUPT 05DA  
                 ??_TMR1_IN 002A                      _ADCON1 000FC1                      i2l1110 0486  
                    i2l1120 04AE                      i2l1112 0498                      i2l1104 044C  
                    i2l1122 04B6                      i2l1106 0454                      i2l1132 0506  
                    i2l1124 04D0                      i2l1116 04A4                      i2l1108 046E  
                    i2l1140 0018                      i2l1126 04E8                      i2l1150 006E  
                    i2l1142 002E                      i2l1128 04FA                      i2l1160 00CA  
                    i2l1152 0072                      i2l1144 003E                      i2l1136 0012  
                    i2l1170 0124                      i2l1162 00CE                      i2l1154 008E  
                    i2l1146 0042                      i2l1138 0014                      i2l1180 0174  
                    i2l1172 0128                      i2l1164 00EA                      i2l1148 005E  
                    i2l1156 009E                      i2l1190 01D0                      i2l1174 0144  
                    i2l1182 0184                      i2l1158 00BA                      i2l1166 00FE  
                    i2l1184 01A0                      i2l1176 0154                      i2l1168 0114  
                    i2l1192 01E0                      i2l1186 01B0                      i2l1178 0158  
                    i2l1194 0512                      i2l1188 01B4                      i2l1196 0520  
                    i2l1198 052E                      _OSCCON 000FD3            __end_of_checkRA5 0572  
            __CFG_XINST$OFF 000000                ?_TMR1_Reload 0027         __size_of_TMR1_Start 0004  
                    clear_0 0578           __end_of_SYSTEM_IN 059E                  __accesstop 0060  
   __end_of__initialization 057E               _readButtonRB0 044C               _readButtonRA5 04AE  
             ___rparam_used 000001              __pcstackCOMRAM 0027                   ?_TMR1_ISR 0027  
            ?_readButtonRB0 0027              ?_readButtonRA5 0027                  __pnvCOMRAM 002C  
              ??_OSCILLATOR 002A                  ??_TMR1_ISR 002A        __size_of_PIN_MANAGER 000E  
                 ?_checkRA5 0027                     i2u40_40 04E8                     i2u40_41 04E4  
                   i2u41_40 04FA                     i2u41_41 04F6                     i2u50_40 01A0  
                   i2u42_40 002E                     i2u50_41 019C                     i2u42_41 002A  
                   i2u51_40 01D0                     i2u43_40 005E                     i2u51_41 01CC  
                   i2u43_41 005A                     i2u36_40 0466                     i2u44_40 008E  
                   i2u52_40 0520                     i2u36_41 045E                     i2u44_41 008A  
                   i2u52_41 051C                     i2u37_40 0486                     i2u36_48 0468  
                   i2u45_40 00BA                     i2u53_40 052E                     i2u37_41 0482  
                   i2u45_41 00B6                     i2u53_41 052A          __end_of_OSCILLATOR 05CA  
                   i2u38_40 0498                     i2u46_40 00EA                     i2u38_41 0494  
                   i2u46_41 00E6                     _OSCTUNE 000F9B                     i2u39_40 04C8  
                   i2u47_40 0114                     i2u39_41 04C0                     i2u47_41 0110  
                   i2u39_48 04CA                     i2u48_40 0144                     i2u48_41 0140  
                   i2u49_40 0174                     i2u49_41 0170                ??_TMR1_Start 002A  
                   _TMR1_IN 0536                     __Hparam 0000                     _pRB0_1s 001D  
                   _pRB0_3s 001B                     __Lparam 0000                     _pRA5_1s 0017  
                   _pRA5_3s 0015          __end_of_TMR1_Start 05E4        __size_of_TMR1_Reload 000A  
                   __pcinit 0572                     __ramtop 1000                     __ptext0 059E  
                   __ptext1 0588                     __ptext2 0536                     __ptext3 05E0  
                   __ptext4 05B2                     __ptext5 05C0                     __ptext6 05D4  
                   __ptext7 05DA                     __ptext8 0242                     __ptext9 0554  
              __size_of_ADC 0006                __size_of_FSM 020A                   _T1CONbits 000FCD  
                ??_checkRA5 002A              __pintcode_body 0510        end_of_initialization 057E  
           ??_readButtonRB0 0029             ??_readButtonRA5 0029                   _INTERRUPT 05D4  
                   int_func 0510                     postinc0 000FEE                   _PORTAbits 000F80  
                 _PORTBbits 000F81                   _TRISAbits 000F92                   _TRISBbits 000F93  
                ?_INTERRUPT 0027                   _SYSTEM_IN 0588                _firstReadRB0 0003  
              _firstReadRA5 0007           __size_of_TMR1_ISR 0230               _secondReadRB0 0001  
             _secondReadRA5 0005         start_initialization 0572                 __end_of_ADC 05E0  
               __end_of_FSM 044C                  ?_SYSTEM_IN 0027                 __pbssCOMRAM 0001  
         __size_of_checkRA5 001E                    ?_TMR1_IN 0027                 ??_INTERRUPT 002A  
                 _pCountRB0 0011                   _pCountRA5 0013                   __pintcode 0008  
             ??_PIN_MANAGER 002A              _timerReloadVal 002C                 ??_SYSTEM_IN 002A  
                  _IPR1bits 000F9F                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
                  _RCONbits 000FD0               ??_TMR1_Reload 0027                    _TMR1_ISR 0012  
       __end_of_PIN_MANAGER 05C0            __size_of_TMR1_IN 001E       __end_of_readButtonRB0 04AE  
     __end_of_readButtonRA5 0510                    __Hrparam 0000                    __Lrparam 0000  
         _fastCountDownFlag 0023         __end_of_TMR1_Reload 05D4                    _checkRA5 0554  
                  __ptext11 0012                    __ptext12 044C                    __ptext13 04AE  
                  __ptext14 05CA               __size_of_main 0014                    int$flags 002E  
               _PIN_MANAGER 05B2                  _INTCONbits 000FF2                    intlevel2 0000  
         _CheckButtonsPress 0008          ?_CheckButtonsPress 0027                  _OSCILLATOR 05C0  
               _TMR1_Reload 05CA         ??_CheckButtonsPress 002A             _fastCountUpFlag 0025  
                _TMR1_Start 05E0   __end_of_CheckButtonsPress 0536  
